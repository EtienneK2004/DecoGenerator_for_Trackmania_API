#RequireContext CMapEditorPlugin

#Const C_API_Url "http://127.0.0.1:8080/get-blocks/"


#Struct K_JsonBlock {
    Int3 Coord;
    Text BlockModelName;
    Text Dir;
    Integer Color;
		Text Mode;
}

#Struct K_JsonBlockList {
    K_JsonBlock[] JsonBlocks;
}


K_JsonBlockList CallAPI(Text BlockSetName){
	declare K_JsonBlockList GeneratedBlocks;
	declare Text Response;
	declare Request = Http.CreateGet(C_API_Url^BlockSetName, False);
	while(!Request.IsCompleted){
		wait(Request.IsCompleted);
	}
	if (Request.StatusCode >= 200 && Request.StatusCode < 300){
		
		GeneratedBlocks.fromjson(Request.Result);
		
	}
	
	return GeneratedBlocks;
}


CMapEditorPlugin::CardinalDirections ConvertBlockDirection(Text direction) {
    switch (direction) {
            case "North": return CMapEditorPlugin::CardinalDirections::North;
            case "East": return CMapEditorPlugin::CardinalDirections::East;
            case "South": return CMapEditorPlugin::CardinalDirections::South;
            case "West": return CMapEditorPlugin::CardinalDirections::West;
    }
    return CMapEditorPlugin::CardinalDirections::North;
}



Void PlaceGeneratedBlocks(K_JsonBlockList GenBlocks){
	foreach(gb in GenBlocks.JsonBlocks){
		PlaceBlock(GetBlockModelFromName(gb.BlockModelName), gb.Coord, ConvertBlockDirection(gb.Dir));
		yield;
	}
}


main(){
	
	declare K_JsonBlockList GeneratedBlocks;
	
	
	
	GeneratedBlocks = CallAPI("GrassRoad");
	RemoveAll();
	PlaceGeneratedBlocks(GeneratedBlocks);
}